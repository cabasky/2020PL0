const N=5,M=10;
var pos[N],poi[N],dat[N],size,total,point[M],yest[M];
var last[M],val[M],used[N],dis[N],i;

procedure swap(&a,&b);
var t;
begin
    t:=a;
    a:=b;
    b:=t;
end;

procedure sppot(a,b,x[N],y[N],z[N]);
begin
    call swap(x[a],x[b]);
    call swap(y[a],y[b]);
    call swap(z[a],z[b]);
end;

procedure up(p);
begin
    while(p/2) do
    begin
        if(dat[p]<dat[p/2]) then call sppot(p,p/2,pos,poi,dat);
        else goto out;
    end;
out:
end;

procedure down(p);
var flag;
begin
    while((p*2)<=size) do
    begin
        if((p*2)=size) then flag:=p*2;
        else
        begin
            if(dat[p*2]<dat[p*2+1]) then  flag:=p*2;
            else flag:=p*2+1;
        end;
        if(dat[p]>dat[flag]) then call sppot(p,flag,pos,poi,dat);
        else goto out2;
        p:=flag;
    end;
out2:
end;

procedure insert(p,d);
begin
    size:=size+1;
    dat[size]:=d;
    poi[size]:=p;
    pos[p]:=size;
    call up(size);
end;

procedure pop();
begin
    dat[1]:=dat[size];
    poi[1]:=poi[size];
    pos[poi[size]]:=1;
    size:=size-1;
    call down(1);
end;

procedure adde(f,t,v);
begin
    total:=total+1;
    point[total]:=t;
    yest[total]:=last[f];
    val[total]:=v;
    last[f]:=total;
end;

procedure dij(s);
var t,p,i,j;
begin
    i:=1;
    while(i<N) do
    begin
        dis[i]:=-1;
        i:=i+1;
    end;
    dis[s]:=0;
    call insert(s,0);
    i:=1;
    while(i<N) do
    begin
        if(size=0) then goto out3;
        p:=poi[1];
        call pop();
        used[p]:=1;
        j:=last[p];
        while(j>0) do
        begin
            t:=point[j];
            if(used[t]) then goto out4;
            if(dis[t]=-1) then 
            begin
                dis[t]:=dis[p]+val[j];
                call insert(t,dis[t]);
            end;
            else
            if(dis[t]>dis[p]+val[j]) then
            begin
                dis[t]:=dis[p]+val[j];
                dat[pos[t]]:=dis[t];
                call up(pos[t]);
            end;
out4:
            j:=yest[j];
        end;
    end;
out3:
end;

begin
    call adde(1,2,2);
    call adde(2,3,2);
    call adde(2,4,1);
    call adde(1,3,5);
    call adde(3,4,3);
    call adde(1,4,4);
    call dij(1);
    i:=1;
    while(i<N) do
    begin
        print(dis[i]);
        i:=i+1;
    end;
end.
